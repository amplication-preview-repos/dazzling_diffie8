/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Rekomendasi as PrismaRekomendasi,
  Temuan as PrismaTemuan,
} from "@prisma/client";

export class RekomendasiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RekomendasiCountArgs, "select">
  ): Promise<number> {
    return this.prisma.rekomendasi.count(args);
  }

  async rekomendasis(
    args: Prisma.RekomendasiFindManyArgs
  ): Promise<PrismaRekomendasi[]> {
    return this.prisma.rekomendasi.findMany(args);
  }
  async rekomendasi(
    args: Prisma.RekomendasiFindUniqueArgs
  ): Promise<PrismaRekomendasi | null> {
    return this.prisma.rekomendasi.findUnique(args);
  }
  async createRekomendasi(
    args: Prisma.RekomendasiCreateArgs
  ): Promise<PrismaRekomendasi> {
    return this.prisma.rekomendasi.create(args);
  }
  async updateRekomendasi(
    args: Prisma.RekomendasiUpdateArgs
  ): Promise<PrismaRekomendasi> {
    return this.prisma.rekomendasi.update(args);
  }
  async deleteRekomendasi(
    args: Prisma.RekomendasiDeleteArgs
  ): Promise<PrismaRekomendasi> {
    return this.prisma.rekomendasi.delete(args);
  }

  async getTemuan(parentId: string): Promise<PrismaTemuan | null> {
    return this.prisma.rekomendasi
      .findUnique({
        where: { id: parentId },
      })
      .temuan();
  }
}
