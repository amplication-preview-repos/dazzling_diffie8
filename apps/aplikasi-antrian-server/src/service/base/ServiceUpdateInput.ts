/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { OfficeWhereUniqueInput } from "../../office/base/OfficeWhereUniqueInput";
import { Type } from "class-transformer";
import { QueueUpdateManyWithoutServicesInput } from "./QueueUpdateManyWithoutServicesInput";
import { StaffUpdateManyWithoutServicesInput } from "./StaffUpdateManyWithoutServicesInput";

@InputType()
class ServiceUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => OfficeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OfficeWhereUniqueInput)
  @IsOptional()
  @Field(() => OfficeWhereUniqueInput, {
    nullable: true,
  })
  office?: OfficeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => QueueUpdateManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => QueueUpdateManyWithoutServicesInput)
  @IsOptional()
  @Field(() => QueueUpdateManyWithoutServicesInput, {
    nullable: true,
  })
  queues?: QueueUpdateManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serviceCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => StaffUpdateManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => StaffUpdateManyWithoutServicesInput)
  @IsOptional()
  @Field(() => StaffUpdateManyWithoutServicesInput, {
    nullable: true,
  })
  staffItems?: StaffUpdateManyWithoutServicesInput;
}

export { ServiceUpdateInput as ServiceUpdateInput };
